<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Portfolio Return Calculator</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 40px;
      background-color: #f9f9f9;
    }
    h2 {
      margin-bottom: 10px;
    }
    table {
      border-collapse: collapse;
      width: 100%;
      margin-bottom: 20px;
    }
    th, td {
      border: 1px solid #ccc;
      padding: 8px;
      text-align: center;
    }
    input[type="number"] {
      width: 80px;
    }
    #chart-container {
      width: 60%;
      margin-top: 40px;
    }
    #result {
      font-weight: bold;
      font-size: 1.2em;
      margin-top: 20px;
    }
  </style>
</head>
<body>

  <h2>Portfolio Return Calculator</h2>

  <form id="portfolioForm">
    <table>
      <thead>
        <tr>
          <th>Asset</th>
          <th>Return (%)</th>
          <th>Volatility (%)</th>
          <th>Weight (%)</th>
        </tr>
      </thead>
      <tbody>
        <!-- Generate 5 rows -->
        <script>
          for (let i = 0; i < 5; i++) {
            document.write(`
              <tr>
                <td>Asset ${i + 1}</td>
                <td><input type="number" step="0.01" name="return${i}" value="${5 + i}"></td>
                <td><input type="number" step="0.01" name="vol${i}" value="${10 + i * 2}"></td>
                <td><input type="number" step="0.01" name="weight${i}" value="${(100 / 5).toFixed(2)}"></td>
              </tr>
            `);
          }
        </script>
      </tbody>
    </table>
    <button type="submit">Calculate Portfolio Return</button>
  </form>

  <div id="result"></div>

  <div id="chart-container">
    <canvas id="weightsChart"></canvas>
  </div>

  <script>
    const form = document.getElementById('portfolioForm');
    const resultDiv = document.getElementById('result');
    const ctx = document.getElementById('weightsChart').getContext('2d');

    let weightsChart = null;

    form.addEventListener('submit', function(event) {
      event.preventDefault();

      let totalWeight = 0;
      let portfolioReturn = 0;
      let weights = [];
      let labels = [];

      for (let i = 0; i < 5; i++) {
        const r = parseFloat(form[`return${i}`].value);
        const w = parseFloat(form[`weight${i}`].value);
        weights.push(w);
        labels.push(`Asset ${i + 1}`);

        portfolioReturn += (r * w / 100);
        totalWeight += w;
      }

      if (Math.abs(totalWeight - 100) > 0.01) {
        resultDiv.textContent = "⚠️ Total weight must equal 100%. Currently: " + totalWeight.toFixed(2) + "%";
        resultDiv.style.color = 'red';
        return;
      }

      resultDiv.textContent = `✅ Portfolio Return: ${portfolioReturn.toFixed(2)}%`;
      resultDiv.style.color = 'green';

      // Update chart
      if (weightsChart) {
        weightsChart.destroy();
      }

      weightsChart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: labels,
          datasets: [{
            label: 'Asset Weights (%)',
            data: weights,
            backgroundColor: [
              '#4e79a7', '#f28e2b', '#e15759', '#76b7b2', '#59a14f'
            ]
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true,
              max: 100
            }
          }
        }
      });
    });
  </script>
</body>
</html>
